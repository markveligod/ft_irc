#include "Class.Command.hpp"
#include "Class.IRC.hpp"
#include "utils.hpp"

/*
** ====================================================================
** Команда: QUIT
** ====================================================================
** Параметры: [<Quit message>]
** ====================================================================
** Сессия клиента заканчивается с QUIT-сообщением. Сервер должен закрыть 
** соединение с клиентом, когда увидит посланное сообщение. 
** При нетсплите (разрыве соединения между двумя серверами), сообщение 
** QUIT содержит в себе имена двух серверов, разделенные пробелами. 
** Первое имя это сервер, который соединяется, второе имя сервера, который 
** отсоединился. 
** Если, по какой-либо причине, соединение клиента закрылось без введения 
** клиентом команды QUIT (например, обрыв связи), сервер потребует запаса 
** в quit-сообщениях с некоторой сортировкой сообщения, в поисках причины 
** разрыва. 
** =====================================================================
*/

void Command::
cmd_quit(IRC& irc, int fd)
{
	User* user = (!_prefix.empty()) ? irc.get_user(_prefix) : irc.get_user(fd);

	if (user) // если от клиента
	{
		string quit_mess = " QUIT :" +
							(_arguments.size() == 1 ? _arguments[0] : "Client closed connection");
		
		irc.forward_to_servers(fd, ":" + user->getName() + quit_mess);	// отправляем всем серверам информацию о том что клиент вышел
		
		irc.delete_user_from_channels(user, quit_mess);
		irc.close_connection(user);										// удаляет юзера и клиента и векторов _users, _clients
	}
	else
		irc.close_connection(fd, 0);
}
